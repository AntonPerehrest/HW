

# –ó–∞–¥–∞—á–∞ ‚Ññ1
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞.

# def kol_razrad(num):
#     razrad = 0
#     while True:
#         num = num / 10
#         razrad += 1
#         if num < 1:
#             break
#
#     return razrad
#
#
# num = int(input('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: '))
# print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä—è–¥–æ–≤ —á–∏—Å–ª–∞:', kol_razrad(num))


# –ó–∞–¥–∞—á–∞ ‚Ññ2
# –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—á–∏—Å–ª–∏—Ç—å –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞, –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏–ª–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# –î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –∫–∞–∂–¥–æ–π —Ñ–∏–≥—É—Ä—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è

# import math
# def sqrt_circle(radius): return 3.14 * (radius ** 2)
#
#
# def sqrt_rect(side_1, side_2): return side_1 * side_2
#
#
# def sqrt_triangle(a, b, c):
#     p = (a + b + c) / 2
#     sqr = math.sqrt(p * (p - a) * (p - b)*(p - c))
#     return sqr
#
#
# square = int(input('1 - –∫—Ä—É–≥, 2 - –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, 3 - —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ \n–ö–∞–∫—É—é –ø–ª–æ—â–∞–¥—å –≤—ã—á–∏—Å–ª–∏—Ç—å?: '))
# if square == 1:
#     radius = int(input('–†–∞–¥–∏—É—Å –∫—Ä—É–≥–∞: '))
#     print(sqrt_circle(radius))
#
# if square == 2:
#     side_1 = int(input('–ü–µ—Ä–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞: '))
#     side_2 = int(input('–í—Ç–æ—Ä–∞—è —Å—Ç–æ—Ä–æ–Ω–∞: '))
#     print(sqrt_rect(side_1, side_2))
#
# if square == 3:
#     a, b, c = map(int, input('3 —Å—Ç–æ—Ä–æ–Ω—ã (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª): ').split())
#     if a + c < b or a + b < c or c + b < a:
#         print('–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞')
#         a, b, c = map(int, input('3 —Å—Ç–æ—Ä–æ–Ω—ã (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª): ').split())
#     print(sqrt_triangle(a, b, c))


# –ó–∞–¥–∞—á–∞ ‚Ññ3
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ,
# —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ ‚Äì –Ω–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∏ –µ–≥–æ –∫–æ–Ω–µ—Ü,
# –ø—Ä–∏ —ç—Ç–æ–º –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å.

# import random
#
# a = [0] * 10
# mn = int(input('–ù–∞—á–∞–ª–æ: '))
# mx = int(input('–ö–æ–Ω–µ—Ü: '))
#
# def func(mn, mx):
#     for i in range(10):
#         a[i] = random.randint(mn, mx)
#
# func(mn, mx)
# print(a)
# 50000 = 0d

# –ó–∞–¥–∞—á–∞ ‚Ññ4
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–æ—Å—å –≤ –≤–∏–¥–µ –¥–Ω–∏:—á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã

# def time(sek): return print(sek // 86400,'d:',
#                             sek % 86400 // 3600,'h:',
#                             sek % 86400 % 3600 // 60,'m:',
#                             sek % 86400 % 3600 % 60,'s')
#
# time(324324)


# –ó–∞–¥–∞—á–∞ ‚Ññ5
# –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≥–ª–∞—Å–Ω—ã—Ö –∏ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö –≤ —Å—Ç—Ä–æ–∫–µ. –°—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∏—Ç—å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
# import string
# stroka = input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Ç—Ä–æ–∫—É: ')
# def glas_soglas(stroka):
#     gl = 0
#     sgl = 0
#     for i in stroka:
#         if i in 'eyuioa':
#             gl += 1
#         elif i in string.punctuation or i == ' ':
#             sgl += 0
#         else:
#             sgl += 1
#     return f'glas - {gl}, sogl - {sgl}'
#
# print(glas_soglas(stroka))



# –ó–∞–¥–∞—á–∞ ‚Ññ6
# –§—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –∑–∞–¥–∞–Ω–Ω–æ–º —Ü–µ–ª–æ–º —á–∏—Å–ª–µ n –ø–æ—Å—á–∏—Ç–∞–µ—Ç n + nn + nnn

# num = int(input('–ß–∏—Å–ª–æ: '))
#
#
# def n_nn_nnn(num): return f'{num} + {int(str(num) * 2)} + {int(str(num) * 3)} = ' \
#                           f'{num + int(str(num) * 2) + int(str(num) * 3)}'
#
#
# print(n_nn_nnn(num))


# –ó–∞–¥–∞—á–∞ ‚Ññ6
#–í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∏–∂–µ–ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –∑–Ω–∞—á–µ–Ω–∏–π x –æ—Ç -10 –¥–æ 10 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Å —à–∞–≥–æ–º, —Ä–∞–≤–Ω—ã–º 1.
# y = ùë•^2 –ø—Ä–∏ -5 <= x <= 5;
# y = 2*|x|-1 –ø—Ä–∏ x < -5;
# y = 2x –ø—Ä–∏ x > 5.
# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –≤–∏–¥–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ x,
# –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (y).

# import math
# import random
#
# def one(x): return f'y = {x**2}'
#
# def two(x): return f'y = {2 * math.fabs(x) - 1}'
#
# def three(x): return f'y = {2 * x}'
#
# x = random.randint(-10, 10)
# print('x = ', x)
# if x in range(-5,6):
#     print('–ü–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ', '\n',one(x))
# elif x < -5:
#     print('–í—Ç–æ—Ä–æ–µ —É—Å–ª–æ–≤–∏–µ', '\n',two(x))
# elif x > 5:
#     print('–¢—Ä–µ—Ç—å–µ —É—Å–ª–æ–≤–∏–µ', '\n',three(x))


# –ó–∞–¥–∞—á–∞ ‚Ññ7
# –ï—Å–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∫–æ—Ä—Ç–µ–∂, —Ç–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –¥–ª–∏–Ω—É –≤—Å–µ—Ö –µ–≥–æ —Å–ª–æ–≤.
# –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫, —Ç–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª-–≤–æ –±—É–∫–≤ –∏ —á–∏—Å–µ–ª –≤ –Ω—ë–º.
# –ß–∏—Å–ª–æ ‚Äì –∫–æ–ª-–≤–æ –Ω–µ—á—ë—Ç–Ω—ã—Ö —Ü–∏—Ñ—Ä.
# –°—Ç—Ä–æ–∫–∞ ‚Äì –∫–æ–ª-–≤–æ –±—É–∫–≤.
# –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ –≤—Å–µ–º–∏ —ç—Ç–∏–º–∏ —Å–ª—É—á–∞—è–º–∏.
